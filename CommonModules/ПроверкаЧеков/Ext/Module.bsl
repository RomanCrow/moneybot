 
#Область ПрограммныйИнтерфейс

Процедура ПроверитьЧек(Параметры) Экспорт
	
	ТекстСообщения = Параметры.ТекстСообщения;
	Отправитель = Параметры.Отправитель;
	ТекстОтвета = Параметры.ТекстОтвета;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПокупкаПродажаТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПокупкаПродажаТоваров КАК ПокупкаПродажаТоваров
	|ГДЕ
	|	ПокупкаПродажаТоваров.Комментарий = &Комментарий";
	Запрос.УстановитьПараметр("Комментарий", ТекстСообщения);
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		ТекстОтвета = "Этот чек уже обработан!";
		Возврат;
	КонецЕсли; 
	
	 
	//РазборДанных
	СтруктураДанныхЧека = Новый Структура("ФН,ФД,ФПД,Дата,Сумма,Операция");
	МассивПараметров = СтрРазделить(ТекстСообщения,"&",Ложь);
	Для Каждого Параметр Из МассивПараметров Цикл
		
		ПервыеСимволы = Лев(Параметр,2);
		
		Если ПервыеСимволы = "t=" Тогда //дата
			
			СтруктураДанныхЧека.Вставить("Дата", СтрЗаменить(Параметр,"t=",""));
			
		ИначеЕсли ПервыеСимволы = "s=" Тогда //сумма
			
			СтруктураДанныхЧека.Вставить("Сумма", Число(СтрЗаменить(Параметр,"s=","")) * 100);
			
		ИначеЕсли ПервыеСимволы = "fn" Тогда //ФН
			
			СтруктураДанныхЧека.Вставить("ФН", СтрЗаменить(Параметр,"fn=",""));
		
		ИначеЕсли ПервыеСимволы = "fp" Тогда //ФПД
			
			СтруктураДанныхЧека.Вставить("ФПД", СтрЗаменить(Параметр,"fp=",""));
		
		ИначеЕсли ПервыеСимволы = "i=" Тогда //ФД
			
			СтруктураДанныхЧека.Вставить("ФД", СтрЗаменить(Параметр,"i=",""));
			
		ИначеЕсли ПервыеСимволы = "n=" Тогда //Номер операции			
			
			СтруктураДанныхЧека.Вставить("Операция", СтрЗаменить(Параметр,"n=",""));
			
		КонецЕсли;
		
	КонецЦикла; 
	
	//Авторизация
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеАвторизацииФНС.Email КАК Email,
	|	ДанныеАвторизацииФНС.Телефон КАК Телефон,
	|	ДанныеАвторизацииФНС.ИмяПользователя КАК ИмяПользователя,
	|	ДанныеАвторизацииФНС.Пароль КАК Пароль
	|ИЗ
	|	РегистрСведений.ДанныеАвторизацииФНС КАК ДанныеАвторизацииФНС
	|ГДЕ
	|	ДанныеАвторизацииФНС.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь", Отправитель);
	РезультатЗапроса = Запрос.Выполнить(); 						
	
	Если РезультатЗапроса.Пустой() Тогда
		ТекстОтвета = "Не заполнены настройки авторизации в ФНС!";
		Возврат;
	КонецЕсли; 
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Соединение = Новый HTTPСоединение("proverkacheka.nalog.ru", 9999,Выборка.Телефон,Выборка.Пароль,,,Новый ЗащищенноеСоединениеOpenSSL());
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json; charset=UTF-8");
	Заголовки.Вставить("device-id", "VoroninsMoney");
	Заголовки.Вставить("device-os", "Ubuntu16");
	
	//Проверка наличия чека
	Запрос = Новый HTTPЗапрос("/v1/ofds/*/inns/*/fss/" + СтруктураДанныхЧека.ФН + "/operations/"
							  + СтруктураДанныхЧека.Операция + "/tickets/" + СтруктураДанныхЧека.ФД
							  + "?fiscalSign=" + СтруктураДанныхЧека.ФПД + "&date=" + СтруктураДанныхЧека.Дата
							  + "&sum=" + СтрЗаменить(Строка(СтруктураДанныхЧека.Сумма),Символы.НПП,""),Заголовки);
	Ответ = Соединение.Получить(Запрос);
	
	//Получение данных чека
	Запрос = Новый HTTPЗапрос("/v1/inns/*/kkts/*/fss/" + СтруктураДанныхЧека.ФН + "/tickets/"
							  + СтруктураДанныхЧека.ФД + "?fiscalSign=" + СтруктураДанныхЧека.ФПД + "&sendToEmail=no", Заголовки);
	Ответ = Соединение.Получить(Запрос);
	
	Если Ответ.КодСостояния <> 200 Тогда
		
		Ответ = Соединение.Получить(Запрос);
		
		Если Ответ.КодСостояния <> 200 Тогда
			ТекстОтвета = "Что-то пошло не так... ФНС не дает данные чека.";
		КонецЕсли;
		
	КонецЕсли;
	
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
	СтруктураЧека = ПрочитатьJSON(Чтение);
	Чек = СтруктураЧека.document.receipt;
	
	//Обработка данных
	Безнал = Чек.ecashTotalSum <> 0;
	ИтогСумма = Чек.totalSum / 100;
	
	Док = Документы.ПокупкаПродажаТоваров.СоздатьДокумент();
	Док.Безнал = Безнал;
	Док.Пользователь = Отправитель;
	Док.Комментарий = ТекстСообщения;
	
	Для Каждого СтрокаЧека Из Чек.items Цикл
		Товар = НайтиТоварПоНаименованию(СтрокаЧека.name, ПолучитьСписокТоваров());
		Если Товар = Неопределено Тогда
			Сообщить("Не найден товар в базе: " + СтрокаЧека.name);
			Товар = Справочники.Товары.НеНайденный;
		КонецЕсли; 
		НовСтрока = Док.Товары.Добавить();
		НовСтрока.Товар = Товар;
		НовСтрока.Статья = Товар.Статья;
		НовСтрока.Цена = СтрокаЧека.price / 100;
		НовСтрока.Количество = СтрокаЧека.quantity;
		НовСтрока.Сумма = СтрокаЧека.sum / 100;
		НовСтрока.Комментарий = СтрокаЧека.name;
	КонецЦикла; 
	
	Попытка
		Док.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Оперативный);
	Исключение
		ТекстОтвета = ОписаниеОшибки();
	    Возврат;
	КонецПопытки; 
	
	ТекстОтвета = ТекстВозвратаЧекОбработан(Док.Ссылка);
	
КонецПроцедуры
 
Функция АвторизацияФНС(Email, ИмяПользователя, Телефон) Экспорт
	
	Соединение = Новый HTTPСоединение("proverkacheka.nalog.ru", 9999,,, ,,Новый ЗащищенноеСоединениеOpenSSL());
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json; charset=UTF-8");
	Заголовки.Вставить("device-id", "voroninsmoney");
	Заголовки.Вставить("device-os", "ubuntu16");
	Запрос = Новый HTTPЗапрос("/v1/mobile/users/signup", Заголовки);
	
	Тело = Новый Структура;
	Тело.Вставить("email", Email);
	Тело.Вставить("name", ИмяПользователя);
	Тело.Вставить("phone", Телефон);

	Запись = Новый ЗаписьJSON;
	Запись.УстановитьСтроку(Новый ПараметрыЗаписиJSON);
	ЗаписатьJSON(Запись, Тело);
	ТекстЗапроса = Запись.Закрыть();
	Запрос.УстановитьТелоИзСтроки(ТекстЗапроса);
	Ответ = Соединение.ВызватьHTTPМетод("POST", Запрос);
	Если Ответ.КодСостояния = 204 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли; 
	
КонецФункции
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НайтиТоварПоНаименованию(Наименование, СписокТоваров)
	
	Товар = НРег(Наименование);
	
	Для Каждого СтрТовар Из СписокТоваров Цикл
		
		Если СтрНайти(Товар, НРег(СтрТовар.Ключ)) <> 0 Тогда
			
			Возврат СтрТовар.Ссылка;
			
		КонецЕсли; 
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Функция ТекстВозвратаЧекОбработан(ДокПокупки)
	
	Текст = "Чек обработан! Затраты:
			|***********************";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПокупкаПродажаТоваровТовары.Статья КАК Статья,
	|	СУММА(ПокупкаПродажаТоваровТовары.Сумма) КАК Сумма,
	|	ПокупкаПродажаТоваровТовары.Товар КАК Товар
	|ИЗ
	|	Документ.ПокупкаПродажаТоваров.Товары КАК ПокупкаПродажаТоваровТовары
	|ГДЕ
	|	ПокупкаПродажаТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПокупкаПродажаТоваровТовары.Статья,
	|	ПокупкаПродажаТоваровТовары.Товар";
	Запрос.УстановитьПараметр("Ссылка", ДокПокупки);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ИтогоЗатраты = 0;
	Пока Выборка.Следующий() Цикл
		ИтогоЗатраты = ИтогоЗатраты + Выборка.Сумма;
		Текст = Текст + Символы.ПС + "  *" + Выборка.Товар + ". Статья: " + Выборка.Статья + ", сумма: " + Выборка.Сумма + " руб.";
	КонецЦикла; 
	
	Текст = Текст + "
			|___________________________
			|ИТОГО затрат: " + ИтогоЗатраты + " руб.";
	
	Возврат Текст + ОбменТелеграм.ТекстОтветаУспешнаяОперация(,,,Ложь);
	
КонецФункции

Функция ПолучитьСписокТоваров()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТоварыКлючи.Ключ КАК Ключ,
	               |	ТоварыКлючи.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Товары.Ключи КАК ТоварыКлючи";
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти