
#Область ПрограммныйИнтерфейс

Процедура ОбработкаКоманды(ПараметрыКоманды) Экспорт
	
	ПараметрыКоманды.Вставить("ВидСредств", ПолучитьВидСредств(ПараметрыКоманды.ТекстСообщения));
	ПараметрыКоманды.Вставить("ТипПланированияОперации", ПолучитьТипПланированияОперации(ПараметрыКоманды.ТекстСообщения));
	ПараметрыКоманды.Вставить("СуммыСообщения", СлужебныеПроцедурыКлиентСервер.ПолучитьЧислаИзСтроки(ПараметрыКоманды.ТекстСообщения));
	
	
	Если ПараметрыКоманды.Команда = Перечисления.Операции.ОперацииСФизЛицами Тогда
		
		//ВыполнитьОперацииСФизЛицами(ПараметрыКоманды);
		
	ИначеЕсли ПараметрыКоманды.Команда = Перечисления.Операции.ОбработкаНоменклатуры Тогда
		
		//Если СтрНайти(ПараметрыКоманды.ТекстСообщения, "добавить") <> 0 Или СтрНайти(ПараметрыКоманды.ТекстСообщения, "новы") <> 0  Тогда
		//	ДобавитьТовары(ПараметрыКоманды);
		//КонецЕсли;
					
	ИначеЕсли ПараметрыКоманды.Команда = Перечисления.Операции.ОбработкаЧека Тогда 	
		
		//ПроверкаЧеков.ПроверитьЧек(ПараметрыКоманды);
 						
	ИначеЕсли ПараметрыКоманды.Команда = Перечисления.Операции.ОбработкаДолга Тогда
		
		//ВыполнитьОперацииПоДолгам(ФорматированноеСообщение, Команда, ТекстСообщения, СтруктураСообщения.message_id, БезНал, ПараметрыКоманды.ТекстОтвета);
		
	ИначеЕсли ПараметрыКоманды.Команда = Перечисления.Операции.ПоступлениеСредств Тогда
		
		//ЭтоПлан = СтрНайти(ФорматированноеСообщение,"план") <> 0 Или СтрНайти(ФорматированноеСообщение,"ожидается") <> 0;						
		//Статья = ПолучитьСтатьюПриходаРасхода(ФорматированноеСообщение);
		//
		//Если Сумма = 0 Тогда
		//	ПараметрыКоманды.ТекстОтвета = ПараметрыКоманды.ТекстОтвета + ТекстОшибкиНетСуммы(Ложь);				
		//ИначеЕсли Не ЭтоПлан Тогда 				
		//	Документы.Операция.СоздатьИЗаполнить(Отправитель, Истина, Сумма, Статья, БезНал, ПараметрыКоманды.ДатаСообщения);
		//	ПараметрыКоманды.ТекстОтвета = ПараметрыКоманды.ТекстОтвета + ТекстОтветаУспешнаяОперация(Истина, Сумма, Статья);				
		//Иначе				
		//	ВыполнитьПлановыеОперации(ФорматированноеСообщение, Перечисления.ПриходРасход.Приход, Отправитель, Сумма, Статья, ПараметрыКоманды.ТекстОтвета);				
		//КонецЕсли;
		
	ИначеЕсли ПараметрыКоманды.Команда = Перечисления.Операции.РасходСредств Тогда
		
		//ЭтоПлан = СтрНайти(ФорматированноеСообщение,"план") <> 0 Или СтрНайти(ФорматированноеСообщение,"ожидается") <> 0;
		//Статья = ПолучитьСтатьюПриходаРасхода(ФорматированноеСообщение);
		//
		//Если Сумма = 0 Тогда
		//	ПараметрыКоманды.ТекстОтвета = ПараметрыКоманды.ТекстОтвета + ТекстОшибкиНетСуммы(Ложь);
		//ИначеЕсли Не ЭтоПлан Тогда 
		//	Успех = Документы.Операция.СоздатьИЗаполнить(Отправитель, Ложь, Сумма, Статья, БезНал, ПараметрыКоманды.ДатаСообщения);
		//	Если Успех Тогда				
		//		ПараметрыКоманды.ТекстОтвета = ПараметрыКоманды.ТекстОтвета + ТекстОтветаУспешнаяОперация(Ложь, Сумма, Статья);							
		//	Иначе				
		//		ПараметрыКоманды.ТекстОтвета = ПараметрыКоманды.ТекстОтвета + ТекстОтветаНедостаточноСредств(БезНал);								 
		//	КонецЕсли;
		//Иначе
		//	ВыполнитьПлановыеОперации(ФорматированноеСообщение, Перечисления.ПриходРасход.Расход, Отправитель, Сумма, Статья, ПараметрыКоманды.ТекстОтвета);
		//КонецЕсли;
							 	
	ИначеЕсли ПараметрыКоманды.Команда = Перечисления.Операции.ПервоеСообщение Тогда 
		
		//ПараметрыКоманды.ТекстОтвета = ТекстСообщенияПриветствие(Отправитель);
				
	ИначеЕсли ПараметрыКоманды.Команда = Перечисления.Операции.СведениеКОстатку Тогда
		
		//СвестиКОстатку(ФорматированноеСообщение, Отправитель, ПараметрыКоманды.ДатаСообщения, БезНал);
		//ПараметрыКоманды.ТекстОтвета = ПараметрыКоманды.ТекстОтвета + ТекстОтветаУспешнаяОперация();
		
	ИначеЕсли ПараметрыКоманды.Команда = Перечисления.Операции.КраткийОтчет Тогда
					
		//ПараметрыКоманды.ТекстОтвета = ПараметрыКоманды.ТекстОтвета + ТекстОтветаУспешнаяОперация(,,,Ложь); 
		
	ИначеЕсли ПараметрыКоманды.Команда = Перечисления.Операции.ПолныйОтчет Тогда
		
		//Параметры = ПолучитьПараметрыАнализа(ФорматированноеСообщение);			
		//
		//ЭтоПлан = СтрНайти(ФорматированноеСообщение,"план") <> 0 Или СтрНайти(ФорматированноеСообщение,"ожидается") <> 0;
		//
		//Если ЭтоПлан Тогда	
		//	ПараметрыКоманды.ТекстОтвета = ПараметрыКоманды.ТекстОтвета + ТекстОтветаПлановыеОперации(Параметры.Начало,Параметры.Конец);
		//Иначе
		//	ПараметрыКоманды.ТекстОтвета = ПараметрыКоманды.ТекстОтвета + ПолучитьТекстДетальногоАнализаЗаПериод(Параметры.Начало,Параметры.Конец,?(Параметры.ВсеПользователи,Неопределено,Отправитель));
		//КонецЕсли;		
		 			
	ИначеЕсли ПараметрыКоманды.Команда = Перечисления.Операции.ПеремещениеСредств Тогда 	
		
		//Успех = СоздатьПеремещение(ФорматированноеСообщение, Отправитель, ПараметрыКоманды.ДатаСообщения, БезНал);			
		//Если Успех Тогда				
		//	ПараметрыКоманды.ТекстОтвета = ПараметрыКоманды.ТекстОтвета + ТекстОтветаУспешнаяОперация();				
		//Иначе				
		//	ПараметрыКоманды.ТекстОтвета = ПараметрыКоманды.ТекстОтвета + ТекстОтветаНедостаточноСредств(БезНал);				
		//КонецЕсли; 
		
	ИначеЕсли ПараметрыКоманды.Команда = Перечисления.Операции.РаспределениеЗатрат Тогда
		
		//РаспределитьЗатраты(ФорматированноеСообщение, ПараметрыКоманды.ТекстОтвета);
		
	Иначе
		
		//Если СтруктураСообщения.Свойство("photo") Тогда
		//	ПараметрыКоманды.ТекстОтвета = ПараметрыКоманды.ТекстОтвета + "Не удалось распознать код на изображении. Повторите операцию.";
		//Иначе
		//	ПараметрыКоманды.ТекстОтвета = ПараметрыКоманды.ТекстОтвета + ТекстОтветаНеизвестнаяОперация();
		//КонецЕсли;
														
	КонецЕсли;
	
КонецПроцедуры

Функция ОстаткиДенежныхСредств(БезНал = Неопределено, Период = Неопределено) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст =" 
	|ВЫБРАТЬ
	|	СредстваОстатки.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.Средства.Остатки(" + ?(Период <> Неопределено, Период, "") + ")  КАК СредстваОстатки";
	
	Если БезНал <> Неопределено Тогда
		Запрос.УстановитьПараметр("ВидСредств",?(БезНал,Перечисления.ВидыСредств.Безналичные,Перечисления.ВидыСредств.Наличные));
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ СредстваОстатки.ВидСредств = &ВидСредств";
	КонецЕсли; 
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Остаток = 0;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Остаток = Выборка.СуммаОстаток;
	КонецЕсли;
	
	Возврат Остаток;		
КонецФункции

Функция ОстатокДолга(Выдавший) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДолгиОстатки.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.Долги.Остатки(
	|			,
	|			Выдавший = &Выдавший
	|				И НЕ Долг.Закрыт) КАК ДолгиОстатки";
	Запрос.УстановитьПараметр("Выдавший", Выдавший);

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.СуммаОстаток;
	КонецЕсли;
	 
	
КонецФункции
 
Функция ПолучитьТекстДетальногоАнализаЗаПериод(Начало, Конец, Пользователь = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Ссылка,
	|	Пользователи.ИДЧата КАК ИДЧата
	|ПОМЕСТИТЬ Пользователи
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи";
	Если Пользователь <> Неопределено Тогда
		Запрос.УстановитьПараметр("Пользователь", Пользователь);
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ Пользователи.Ссылка = &Пользователь";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Пользователь,
	|	СредстваОбороты.Статья КАК Статья,
	|	ЕСТЬNULL(СредстваОбороты.СуммаПриход, 0) КАК СуммаПриход,
	|	ЕСТЬNULL(СредстваОбороты.СуммаРасход, 0) КАК СуммаРасход
	|ИЗ
	|	Пользователи КАК Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Средства.Обороты(&НачалоДня, &КонецПериода, , ) КАК СредстваОбороты
	|		ПО Пользователи.Ссылка = СредстваОбороты.Пользователь
	|ГДЕ НЕ СредстваОбороты.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОпераций.Перемещение)
	|ИТОГИ 
	|	Сумма(СуммаПриход),
	|   Сумма(СуммаРасход)
	|ПО
	|	Пользователь";
	Запрос.УстановитьПараметр("НачалоДня", Начало);
	Запрос.УстановитьПараметр("КонецПериода", Конец);
	
	Если Конец - Начало < 86400 Тогда
		ТекстПериода = Формат(Конец, "ДЛФ=D");
	Иначе
		ТекстПериода = Строка(Формат(Начало, "ДЛФ=D")) + " - " + Строка(Формат(Конец, "ДЛФ=D")) 
	КонецЕсли; 
	
	ТекстСообщения = "Детализация за " + ТекстПериода + ":
	                |************************************************";
	
	ВыборкаПользователь = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	
	Пока ВыборкаПользователь.Следующий() Цикл
		ТекстСообщения = ТекстСообщения + "
		|<<" + ВыборкаПользователь.Пользователь + ">> :
		|
		|  1)Доходы:";
		
		ВыборкаДетальные = ВыборкаПользователь.Выбрать();
		Пока ВыборкаДетальные.Следующий() Цикл
			Если ВыборкаДетальные.СуммаПриход <> 0 Тогда
				ТекстСообщения = ТекстСообщения + "
				|   * " + ВыборкаДетальные.Статья + " - " + ВыборкаДетальные.СуммаПриход + " руб.";
			КонецЕсли; 	
		КонецЦикла; 
		
		ТекстСообщения = ТекстСообщения + "
		|  ______________________________________________
		|  ИТОГО: " + ВыборкаПользователь.СуммаПриход + " руб.
		|
		|  2)Расходы:";
		
		ВыборкаДетальные.Сбросить();
		Пока ВыборкаДетальные.Следующий() Цикл
			Если ВыборкаДетальные.СуммаРасход <> 0 Тогда
				ТекстСообщения = ТекстСообщения + "
				|   * " + ВыборкаДетальные.Статья + " - " + ВыборкаДетальные.СуммаРасход;
			КонецЕсли; 	
		КонецЦикла;
		
		ТекстСообщения = ТекстСообщения + "
		|  ______________________________________________
		|  ИТОГО: " + ВыборкаПользователь.СуммаРасход + " руб.
		|************************************************
        |";		
	КонецЦикла; 
	
	ТекстСообщения = ТекстСообщения + "
		| Остаток на конец периода: 
		|  * Наличные - " + ОбработкаКоманд.ОстаткиДенежныхСредств(Ложь) + " руб.
		|  * Безналичные - " + ОбработкаКоманд.ОстаткиДенежныхСредств(Истина) + " руб.";
	
	Возврат ТекстСообщения;
	
КонецФункции

Функция СуммаПотраченныхДенежныхСредствЗаПериод(Пользователь, Начало, Конец)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СредстваОбороты.СуммаРасход КАК Расход
	|ИЗ
	|	РегистрНакопления.Средства.Обороты(
	|			&Начало,
	|			&Конец,
	|			Авто,
	|			ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОпераций.Перемещение)
	|				И ТипОперации <> ЗНАЧЕНИЕ(Справочник.СтатьиДоходаРасхода.СведениеКОстатку)
	|				И Пользователь = &Пользователь) КАК СредстваОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	СредстваОбороты.СуммаРасход";
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("Начало", Начало);
	Запрос.УстановитьПараметр("Конец", Конец);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Расход;
	Иначе
		Возврат 0;
	КонецЕсли; 		 
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьВидСредств(ТекстСообщения)
	
	Вероятности = НейронныеСети.ПолучитьВероятности(Справочники.ЛинейныеНейронныеСети.ОпределениеТипаДенежныхСредств, ТекстСообщения);
	
	Если Вероятности = Неопределено Тогда
		Возврат Перечисления.ВидыСредств.Наличные;
	Иначе
		Возврат Вероятности[0].Нейрон;
	КонецЕсли; 
	
КонецФункции

Функция ПолучитьТипПланированияОперации(ТекстСообщения)
	
	Вероятности = НейронныеСети.ПолучитьВероятности(Справочники.ЛинейныеНейронныеСети.ОпределениеТипаПланированияОперации, ТекстСообщения);
	
	Если Вероятности = Неопределено Тогда
		Возврат Перечисления.ТипПланированияОперации.ФактическаяОперация;
	Иначе
		Возврат Вероятности[0].Нейрон;
	КонецЕсли;
	
КонецФункции
 
Процедура ВыполнитьОперацииСФизЛицами(Параметры)
	
	ТекстСообщения = Параметры.ТекстСообщения;
	ТекстОтвета = Параметры.ТекстОтвета;
	
	Если СтрНайти(ТекстСообщения, "создать") <> 0 Тогда
		
		Данные = СтрЗаменить(ТекстСообщения, "создать физлицо ", "");
		Данные = СтрРазделить(Данные,",", Ложь);
		СпрФЛ = Справочники.ФизическиеЛица.СоздатьЭлемент();
		СпрФЛ.Наименование = ТРег(Данные[0]);
		СпрФЛ.НомерКарты = ?(Данные.Количество() > 1, Данные[1], "");
		СпрФЛ.Записать();
		ТекстОтвета = ТекстОтвета + "Создано физлицо: " + СпрФЛ.Наименование + ?(ЗначениеЗаполнено(СпрФЛ.НомерКарты),", номер карты: " + СпрФЛ.НомерКарты,"");
	ИначеЕсли СтрНайти(ТекстСообщения, "изменить") <> 0 Тогда 	
		
		ФизЛицо = НайтиФизЛицо(ТекстСообщения);
		
		Если ФизЛицо = Неопределено Тогда
			ТекстОтвета = ТекстОтвета + "Ошибка команды! В базе отсутствует физическое лицо.";
		Иначе
			НомерКарты = СтрЗаменить(Строка(СлужебныеПроцедурыКлиентСервер.ПолучитьЧислаИзСтроки(ТекстСообщения)[0]),Символы.НПП,"");
			Если НомерКарты = 0 Тогда
				ТекстОтвета = ТекстОтвета + "Введите номер карты физлица!";
			Иначе
				СпрФЛ = ФизЛицо.ПолучитьОбъект();
				СпрФЛ.НомерКарты = НомерКарты;
				СпрФЛ.Записать();
				ТекстОтвета = ТекстОтвета + "Номер карты физлица " + ФизЛицо + " изменен!";
			КонецЕсли; 
		КонецЕсли; 
		
	ИначеЕсли СтрНайти(ТекстСообщения, "информация") <> 0 Тогда
		ФизЛицо = НайтиФизЛицо(ТекстСообщения);
		
		Если ФизЛицо = Неопределено Тогда
			ТекстОтвета = ТекстОтвета + "Ошибка команды! В базе отсутствует физическое лицо.";
		Иначе
			ТекстОтвета = ТекстОтвета + "Информация о физлице: " + ФизЛицо + ":
										|________________________________________
										|   *Номер карты: " + ФизЛицо.НомерКарты; 
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры
 
Процедура ДобавитьТовары(Параметры)
	
	ТекстСообщения = Параметры.ТекстСообщения;
	ТекстОтвета = Параметры.ТекстОтвета;
	
	МассивДанных = СтрРазделить(ТекстСообщения, ":");
	
	Статья = ПолучитьСтатьюПриходаРасхода(МассивДанных[0]);
	
	МассивТоваров = СтрРазделить(МассивДанных[1],",");
	
	НазванияТоваровСтрока = "";
	
	Для Каждого Товар Из МассивТоваров Цикл
		
		ДанныеТовара = СтрРазделить(Товар, "-", Ложь);
		
		ИмяТовара = СокрЛП(ДанныеТовара[0]);
		Если ДанныеТовара.Количество() <> 1 Тогда
			МассивКлючей = СтрРазделить(ДанныеТовара[1],";",Ложь);
		КонецЕсли;
		
		ТакойжеТовар = Справочники.Товары.НайтиПоНаименованию(ИмяТовара, Ложь);
		Если ТакойжеТовар.Пустая() Тогда
			
			НовСпр = Справочники.Товары.СоздатьЭлемент();
			НовСпр.Наименование = ИмяТовара;
			НовСпр.Статья = Статья;
			
			НовСтр = НовСпр.Ключи.Добавить();
			НовСтр.Ключ = ИмяТовара;
			
			Если МассивКлючей <> Неопределено Тогда
				
				Для Каждого Ключ Из МассивКлючей Цикл
					
					НовСтр = НовСпр.Ключи.Добавить();
					НовСтр.Ключ = СокрЛП(Ключ);
					
				КонецЦикла;
				
			КонецЕсли;
			
			НовСпр.Записать();
			
		КонецЕсли;
		НазванияТоваровСтрока = НазванияТоваровСтрока + Символы.ПС + НовСпр.Наименование;
	КонецЦикла;
	
	ТекстОтвета = ТекстОтвета + "Добавлены товары категории " + Статья + ":" + НазванияТоваровСтрока;
	
КонецПроцедуры
 
Процедура ВыполнитьОперацииПоДолгам(ТекстСообщения, Команда, Комментарий, ИДСообщения, БезНал, ТекстОтвета)
	
	Выдавший = НайтиФизЛицо(ТекстСообщения);
	
	НашлиФизЛицо = ?(Выдавший = Неопределено, Ложь, Истина);
	
	Если СтрНайти(ТекстСообщения, "новый") <> 0 И НашлиФизЛицо Тогда
		
		СпрДолг = Справочники.Долг.СоздатьЭлемент();
		СпрДолг.Выдавший = Выдавший;
		СпрДолг.Сумма = СлужебныеПроцедурыКлиентСервер.ПолучитьЧислаИзСтроки(ТекстСообщения)[0];
		СпрДолг.Наименование = "Взят долг у " + Выдавший;
		СпрДолг.Безнал = БезНал;
		СпрДолг.НеСоздаватьПоступление = ?(СтрНайти(ТекстСообщения, "остат") <> 0, Истина, Ложь);
		СпрДолг.Комментарий = Комментарий;
		СпрДолг.ИДСообщения = ИДСообщения;
		СпрДолг.Записать();
		ТекстОтвета = ТекстОтвета + "Создан новый долг. Выдавший: " + Выдавший + ", сумма: " + СпрДолг.Сумма + " руб."; 
			
	ИначеЕсли СтрНайти(ТекстСообщения, "уменьш") <> 0 И НашлиФизЛицо Тогда
		
		Сумма = -СлужебныеПроцедурыКлиентСервер.ПолучитьЧислаИзСтроки(ТекстСообщения)[0];
		
		ТекДолг = НайтиДолг(Выдавший);
		Если ТекДолг = Неопределено Тогда
			
			ТекстОтвета = ТекстОтвета + " У физлица " + Выдавший + " нет неоплаченных долгов.";
			
		Иначе
		
			Успешно = ДвижениеДолга(ТекДолг, Сумма, Комментарий, ИДСообщения, БезНал);
			
			Если Успешно Тогда
			 
				ОстатокДолга = ОстатокДолга(Выдавший);
				
				Если ОстатокДолга = 0 Тогда
					
					ТекстОтвета = ТекстОтвета + "Долг " + Выдавший + " оплачен! Поздравляю!!!";
					
				Иначе
					
					ТекстОтвета = ТекстОтвета + "Долг " + Выдавший + " уменьшен на " + -Сумма + " руб. Остаток долга: " + ОстатокДолга + " руб.";
				
				КонецЕсли; 
				
				ТекстОтвета = ТекстОтвета + Символы.ПС + ТекстОтветаУспешнаяОперация(,,,Ложь);
				
			Иначе
				
				ТекстОтвета = ТекстОтвета + "Недостаточно средств для списания!" + Символы.ПС + ТекстОтветаУспешнаяОперация(,,,Ложь);
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли СтрНайти(ТекстСообщения, "увелич") <> 0 И НашлиФизЛицо Тогда
		
		Сумма = СлужебныеПроцедурыКлиентСервер.ПолучитьЧислаИзСтроки(ТекстСообщения)[0];
		
		ТекДолг = НайтиДолг(Выдавший);
		Если ТекДолг = Неопределено Тогда
			
			ТекстОтвета = ТекстОтвета + " У физлица " + Выдавший + " нет неоплаченных долгов. Создайте новый долг.";
			
		Иначе
		
			Успешно = ДвижениеДолга(ТекДолг, Сумма, Комментарий, ИДСообщения, БезНал);
			 
			ТекстОтвета = ТекстОтвета + "Долг физлицу: " + Выдавший + " увеличен на " + Сумма + " руб. Остаток долга: " + ОстатокДолга(Выдавший) + Символы.ПС + ТекстОтветаУспешнаяОперация(,,,Ложь);
		
		КонецЕсли;
		
	ИначеЕсли Команда = "ПоказатьОстаток" Тогда
		
		ТекстОтвета = ТекстОтвета + ТекстОтветаОстаткиДолгов(?(НашлиФизЛицо,Выдавший,Неопределено));
		
	ИначеЕсли Команда = "ДетальныйАнализ" И НашлиФизЛицо Тогда 
		
		ТекстОтвета =  ТекстОтвета + ТекстДетальныйАнализДолга(Выдавший);
		
	ИначеЕсли Не НашлиФизЛицо Тогда
		
		ТекстОтвета = ТекстОтвета + "В базе отсутствует физическое лицо. Создайте его, написав: ""Новое физлицо [Имя], [Номер карты]""";		
		
	Иначе	
		ТекстОтвета = ТекстОтвета + "Извините, мне не понятно, что вы хотите мне сообщить...";
		Возврат;
	КонецЕсли; 
	
КонецПроцедуры

Функция ПолучитьСтатьюПриходаРасхода(ТекстСообщения)
	
	Возврат Справочники.СтатьиДоходаРасхода.Прочее;
	
КонецФункции 

Процедура ВыполнитьПлановыеОперации(ТекстСообщения, ТипОперации, Пользователь, Сумма, Статья, ТекстОтвета)
	
	СтрокаБезСуммы = СтрЗаменить(ТекстСообщения, Строка(Сумма),"");
	
	Дата = СлужебныеПроцедурыКлиентСервер.НайтиДатуВСтроке(СтрокаБезСуммы, Сумма);	
	Запись = РегистрыСведений.ПланируемыеДоходыРасходы.СоздатьМенеджерЗаписи();
	Запись.Период = Дата;
	Запись.ПриходРасход = ТипОперации;
	Запись.Пользователь = Пользователь;
	Запись.Статья = Статья;
	Запись.Сумма = Сумма;
	Запись.Записать(Истина);
	
	ТекстОтвета = ТекстОтвета + "Операция прошла успешно. Ожидается " + ?(ТипОперации=Перечисления.ПриходРасход.Приход,"поступление","списание")
				  + " денежных средств " + Формат(Дата, "ДЛФ=DD") + " по статье " + Статья + ". Сумма: " + Сумма + " руб.";
	
КонецПроцедуры

Процедура СвестиКОстатку(ТекстСообщения, ТекПользователь, Дата, БезНал)
	
	Сумма = СлужебныеПроцедурыКлиентСервер.ПолучитьЧислаИзСтроки(ТекстСообщения)[0];
	Остаток = ОстаткиДенежныхСредств(БезНал);
	
	Дельта = Сумма - Остаток; 
	
	Если Дельта < 0 Тогда
		Приход = Ложь;
		Дельта = Дельта * -1;
	ИначеЕсли Дельта > 0 Тогда 
		Приход = Истина;
	Иначе
		Возврат;
	КонецЕсли; 
			
	Количество = Пользователи.КоличествоПользователей();
	
	Пользователи = Справочники.Пользователи.Выбрать();

	СуммаНаОдного = Число(Формат(Дельта / Количество, "ЧДЦ=2"));
	
	Пока Пользователи.Следующий() Цикл
		
		Документы.Операция.СоздатьИЗаполнить(Пользователи.Ссылка, Приход, СуммаНаОдного, Справочники.СтатьиДоходаРасхода.СведениеКОстатку, БезНал, Дата);	
		
		Дельта = Дельта - СуммаНаОдного;
		
	КонецЦикла;
	
	Если Дельта <> 0 Тогда
		Документы.Операция.СоздатьИЗаполнить(ТекПользователь, ?(Дельта>0,Истина,Ложь), ?(Дельта>0,Дельта,Дельта * -1), Справочники.СтатьиДоходаРасхода.СведениеКОстатку, БезНал, Дата);	
	КонецЕсли; 	
	
КонецПроцедуры

Функция ПолучитьПараметрыАнализа(ТекстСообщения)

	СтруктураПараметров = Новый Структура("ВсеПользователи,Начало,Конец");
	
	СтруктураПараметров.ВсеПользователи = СтрНайти(ТекстСообщения,"все") <> 0;
	
	Следующий = СтрНайти(ТекстСообщения, "следующ") <> 0 Или СтрНайти(ТекстСообщения, "завтра") <> 0;
	Предыдущий = СтрНайти(ТекстСообщения, "предыдущ") <> 0 Или СтрНайти(ТекстСообщения, "вчера") <> 0;
	
	ТекДата = ТекущаяДатаСеанса();		
	
	Если СтрНайти(ТекстСообщения, "месяц") Тогда
		Если Следующий Тогда
			ТекДата = КонецМесяца(ТекДата) + 1;	
		ИначеЕсли Предыдущий Тогда 	
			ТекДата = НачалоМесяца(ТекДата) - 1;
		КонецЕсли;  
		Начало = НачалоМесяца(ТекДата);
		Конец = КонецМесяца(ТекДата);
	ИначеЕсли СтрНайти(ТекстСообщения, "квартал") Тогда
		Если Следующий Тогда
			ТекДата = КонецКвартала(ТекДата) + 1;	
		ИначеЕсли Предыдущий Тогда 	
			ТекДата = НачалоКвартала(ТекДата) - 1;
		КонецЕсли;
		Начало = НачалоКвартала(ТекДата);
		Конец = КонецКвартала(ТекДата);
	ИначеЕсли СтрНайти(ТекстСообщения, "год") Тогда
		Если Следующий Тогда
			ТекДата = КонецГода(ТекДата) + 1;	
		ИначеЕсли Предыдущий Тогда 	
			ТекДата = НачалоГода(ТекДата) - 1;
		КонецЕсли;
		Начало = НачалоГода(ТекДата);
		Конец = КонецГода(ТекДата);
	ИначеЕсли СтрНайти(ТекстСообщения, "неделю") Тогда
		Если Следующий Тогда
			ТекДата = КонецНедели(ТекДата) + 1;	
		ИначеЕсли Предыдущий Тогда 	
			ТекДата = НачалоНедели(ТекДата) - 1;
		КонецЕсли;
		Начало = НачалоНедели(ТекДата);
		Конец = КонецНедели(ТекДата);
	Иначе
		
		Период = ОбработатьПериодПоМесяцамОтДаты(ТекстСообщения, ТекДата, Следующий, Предыдущий);
		
		Если Период = Неопределено Тогда
					 
			Если Следующий Тогда
				ТекДата = КонецДня(ТекДата) + 1;	
			ИначеЕсли Предыдущий Тогда 	
				ТекДата = НачалоДня(ТекДата) - 1;
			КонецЕсли;
			Начало = НачалоДня(ТекДата);
			Конец = КонецДня(ТекДата);
			
		Иначе
			
			Начало = Период.Начало;
			Конец = Период.Конец;
			
		КонецЕсли;
	КонецЕсли; 
	
	СтруктураПараметров.Начало = Начало;
	СтруктураПараметров.Конец = Конец;
	
	Возврат СтруктураПараметров;
	
КонецФункции
 
Функция СоздатьПеремещение(ТекстСообщения, ТекПользователь, Дата, НаБезнал)
	
	Сумма = СлужебныеПроцедурыКлиентСервер.ПолучитьЧислаИзСтроки(ТекстСообщения)[0];
	
	Остаток = ОстаткиДенежныхСредств(Не НаБезНал);
	
	Если Остаток < Сумма Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Успех = Документы.Операция.СоздатьИЗаполнить(ТекПользователь, Ложь, Сумма * -1, Справочники.СтатьиДоходаРасхода.Прочее, НаБезнал, Дата, Истина);
	Успех = Документы.Операция.СоздатьИЗаполнить(ТекПользователь, Истина, Сумма, Справочники.СтатьиДоходаРасхода.Прочее, Не НаБезнал, Дата, Истина);
	
	Возврат Успех;
	
КонецФункции

Процедура РаспределитьЗатраты(ТекстСообщения, ТекстОтвета) Экспорт
	
	//Сумма ежедневных затрат
	СуммаДень = Константы.МаксимальнаяСуммаЕжедневныхЗатрат.Получить();
	Если СуммаДень = 0 Тогда
		ТекстОтвета = ТекстОтвета + "Кажется, вы не установили максимальную сумму ежедневных затрат на незапланированные расходы...";
		Возврат;
	КонецЕсли; 
	
	//Можно меньше, мо не менее 75% от суммы ежедневных затрат
	МинимумЗатрат = СуммаДень / 100 * 75;
	
	ТекДата = ТекущаяДатаСеанса();
	
	//период распределения: до конца следующего месяца
	Если СтрНайти(ТекстСообщения,"следующ") <> 0 Тогда
		
		Начало = КонецМесяца(ТекДата) + 1;
	    Конец = КонецМесяца(Начало);
		
	Иначе
		
		Если СтрНайти(ТекстСообщения,"включ") <> 0 Или СтрНайти(ТекстСообщения,"сегодн") <> 0 Тогда
			Начало = НачалоДня(ТекущаяДатаСеанса());
		Иначе
			Начало = КонецДня(ТекущаяДатаСеанса()) + 1;
		КонецЕсли; 
		
		Конец = КонецМесяца(Начало);
		
	КонецЕсли; 
		
	//Все плановые операции за период
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПланируемыеДоходыРасходы.Период, ДЕНЬ) КАК Период,
	|	СУММА(ВЫБОР
	|			КОГДА ПланируемыеДоходыРасходы.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ПриходРасход.Приход)
	|				ТОГДА ПланируемыеДоходыРасходы.Сумма
	|			ИНАЧЕ -ПланируемыеДоходыРасходы.Сумма
	|		КОНЕЦ) КАК СуммаПланОпераций
	|ИЗ
	|	РегистрСведений.ПланируемыеДоходыРасходы КАК ПланируемыеДоходыРасходы
	|ГДЕ
	|	ПланируемыеДоходыРасходы.Период МЕЖДУ &Начало И &Конец
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ПланируемыеДоходыРасходы.Период, ДЕНЬ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Запрос.УстановитьПараметр("Начало", Начало);
	Запрос.УстановитьПараметр("Конец", Конец);
	
	ТЗЗатрат = Запрос.Выполнить().Выгрузить();
	
	ТЗИтог = Новый ТаблицаЗначений;
	ТЗИтог.Колонки.Добавить("Дата");
	ТЗИтог.Колонки.Добавить("СуммаОпераций");
	ТЗИтог.Колонки.Добавить("Остаток");
	ТЗИтог.Колонки.Добавить("СуммаЗатратВДень");
	
	МассивИндексовПрихода = Новый Массив;
	ТекОстаток = ОстаткиДенежныхСредств();
	Остаток = ТекОстаток;	
	НачальнаяДата = Начало;
	ТекИндексСтроки = 0;
	
	Пока НачальнаяДата < Конец Цикл
		
		НовСтр = ТЗИтог.Добавить();
		НовСтр.Дата = НачальнаяДата;
		
		СтрокаТЗПланОпераций = ТЗЗатрат.Найти(НачальнаяДата,"Период");
		Если СтрокаТЗПланОпераций <> Неопределено Тогда
			
			НовСтр.СуммаОпераций = СтрокаТЗПланОпераций.СуммаПланОпераций;
			
			Если СтрокаТЗПланОпераций.СуммаПланОпераций > 0 Тогда
				МассивИндексовПрихода.Добавить(ТекИндексСтроки);	
			КонецЕсли;
			
		Иначе
			
			НовСтр.СуммаОпераций = 0;
			
		КонецЕсли; 
		
		Остаток = Остаток + НовСтр.СуммаОпераций - СуммаДень;
		НовСтр.СуммаЗатратВДень = ?(НовСтр.СуммаОпераций < 0, -НовСтр.СуммаОпераций, 0);
		НовСтр.Остаток = Остаток;
		
		ТекИндексСтроки = ТекИндексСтроки +1;
		НачальнаяДата = НачальнаяДата + 86400;
		
	КонецЦикла; 
	
	Если МассивИндексовПрихода.Найти(ТекИндексСтроки - 1) = Неопределено Тогда
		МассивИндексовПрихода.Добавить(ТекИндексСтроки - 1);	
	КонецЕсли; 
	
	ПредыдущийИндекс = 0;
	БылоНорм = Ложь;
	СейчасНорм = Ложь;
	Остаток = ТекОстаток;
	Для Каждого Индекс Из МассивИндексовПрихода Цикл
		
		ИтогСуммаЗатрат = 0;
		Для Инд = 0 По Индекс Цикл
			ИтогСуммаЗатрат = ИтогСуммаЗатрат + ТЗИтог[Инд].СуммаЗатратВДень;		
		КонецЦикла; 
		
		СуммаИтогОстатокЗаПериод = Остаток - ИтогСуммаЗатрат - (СуммаДень * (Индекс - ПредыдущийИндекс)); 
		
		Если СуммаИтогОстатокЗаПериод > 0 Тогда
			СейчасНорм = Истина;	
		КонецЕсли; 
		
		Среднее = ИтогСуммаЗатрат / (Индекс + 1);
		
		ПредыдущийИндекс = Индекс;
		
	КонецЦикла; 
	а = 0;
	
КонецПроцедуры

Функция НайтиФизЛицо(ТекстСообщения)
	
	НашлиФизЛицо = Ложь;
	МассивСлов = СтрРазделить(ТекстСообщения, " ",Ложь);
	Запрос= Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФизическиеЛицаСклонения.Ссылка КАК Ссылка,
	|	ФизическиеЛицаСклонения.СклоненноеИмя КАК Наименование
	|ИЗ
	|	Справочник.ФизическиеЛица.Склонения КАК ФизическиеЛицаСклонения";
	Выборка = Запрос.Выполнить().Выбрать();
	Для Каждого Слово Из МассивСлов Цикл
		Пока Выборка.Следующий() Цикл
			Если СтрНайти(НРег(Выборка.Наименование), Слово) <> 0 Тогда
				НашлиФизЛицо = Истина;
				ФизЛицо = Выборка.Ссылка;
				Прервать;
			КонецЕсли;

		КонецЦикла;
		Если НашлиФизЛицо Тогда
			Прервать;
		КонецЕсли;
		Выборка.Сбросить();
	КонецЦикла;
	
	Возврат ?(НашлиФизЛицо,ФизЛицо,Неопределено);
	
КонецФункции

Функция НайтиДолг(Выдавший)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Долг.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Долг КАК Долг
	|ГДЕ
	|	Долг.Выдавший = &Выдавший
	|	И НЕ Долг.Закрыт
	|	И НЕ Долг.ПометкаУдаления";
	Запрос.УстановитьПараметр("Выдавший", Выдавший);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли; 
	 	
КонецФункции
 
Функция ДвижениеДолга(Долг, Сумма, Комментарий, ИДСообщения, Безнал)
		
	Количество = Пользователи.КоличествоПользователей();
	
	Пользователи = Справочники.Пользователи.Выбрать();

	СуммаНаОдного = Число(Формат(Сумма / Количество, "ЧДЦ=2"));
	ОстатокСуммы = Сумма;
	
	Если Сумма < 0 Тогда
		Остаток = ОстаткиДенежныхСредств(Безнал);
		Если Остаток < -Сумма Тогда
			Возврат Ложь;	
		КонецЕсли; 
	КонецЕсли; 
	
	Пока Пользователи.Следующий() Цикл
		
		Документы.Операция.СоздатьИЗаполнить(Пользователи.Ссылка, ?(СуммаНаОдного < 0,Ложь,Истина), ?(СуммаНаОдного < 0, -СуммаНаОдного, СуммаНаОдного), Справочники.СтатьиДоходаРасхода.ВзятиеВДолг, Безнал, ТекущаяДатаСеанса());	
		
		ОстатокСуммы = ОстатокСуммы - СуммаНаОдного;
		
	КонецЦикла;
	
	Если ОстатокСуммы <> 0 Тогда
		Документы.Операция.СоздатьИЗаполнить(Пользователи.Ссылка, ?(ОстатокСуммы>0,Истина,Ложь), ?(ОстатокСуммы>0,ОстатокСуммы,ОстатокСуммы * -1), Справочники.СтатьиДоходаРасхода.ВзятиеВДолг, Безнал, ТекущаяДатаСеанса());	
	КонецЕсли;	
	
	Док = Документы.ПересчетДолга.СоздатьДокумент();
	Док.Дата = ТекущаяДатаСеанса();
	Док.Долг = Долг; 
	Док.Сумма = Сумма;
	Док.Комментарий = Комментарий;
	Док.ИДСообщения = ИДСообщения;
	Док.Записать(РежимЗаписиДокумента.Проведение);
	
	Если ОстатокДолга(Долг.Выдавший) = 0 Тогда
		СпрДолг = Долг.ПолучитьОбъект();
		СпрДолг.Закрыт = Истина;
		СпрДолг.Записать();
	КонецЕсли; 
	
	Возврат Истина;
	
КонецФункции

Функция ОбработатьПериодПоМесяцамОтДаты(ТекстСообщения, Дата, Следующий = Ложь, Предыдущий = Ложь)
		
	Если СтрНайти(ТекстСообщения, "январь") Тогда
		Месяц = 1;
	ИначеЕсли СтрНайти(ТекстСообщения, "февраль") Тогда
		Месяц = 2;
	ИначеЕсли СтрНайти(ТекстСообщения, "март") Тогда
		Месяц = 3;
	ИначеЕсли СтрНайти(ТекстСообщения, "апрель") Тогда
		Месяц = 4;
	ИначеЕсли СтрНайти(ТекстСообщения, "май") Тогда
		Месяц = 5;
	ИначеЕсли СтрНайти(ТекстСообщения, "июнь") Тогда
		Месяц = 6;
	ИначеЕсли СтрНайти(ТекстСообщения, "июль") Тогда
		Месяц = 7;
	ИначеЕсли СтрНайти(ТекстСообщения, "август") Тогда
		Месяц = 8;
	ИначеЕсли СтрНайти(ТекстСообщения, "сентябрь") Тогда
		Месяц = 9;
	ИначеЕсли СтрНайти(ТекстСообщения, "октябрь") Тогда
		Месяц = 10;
	ИначеЕсли СтрНайти(ТекстСообщения, "ноябрь") Тогда
		Месяц = 11;
	ИначеЕсли СтрНайти(ТекстСообщения, "декабрь") Тогда
	    Месяц = 12;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Год = Год(Дата);
	
	Если Следующий Тогда
		Год = Год + 1;
	ИначеЕсли Предыдущий Тогда
		Год = Год - 1;
	КонецЕсли; 
	
	Дата = Дата(Год, Месяц, 1);
	
	Возврат Новый Структура("Начало, Конец", Дата, КонецМесяца(Дата));
	
КонецФункции

Функция ТекстОтветаУспешнаяОперация(Приход = Ложь, Сумма = 0, Статья = Неопределено, ТекстУспешно = Истина)
	
	ТекстОтвета = ?(ТекстУспешно, "Операция выполнена." + Символы.ПС,"");
		
	Если Приход Тогда
		ТекстОтвета = ТекстОтвета + "
		|Статья прихода: " + Статья;
	
	ИначеЕсли Сумма <> 0 Тогда
		ТекстОтвета = ТекстОтвета + "
		|Статья расхода: " + Статья;
	КонецЕсли; 
	
	ТекстОтвета = ТекстОтвета + "
	            |********************
				|Остаток средств:
				|Наличные - " + ОбработкаКоманд.ОстаткиДенежныхСредств(Ложь) + " руб.
				|Безналичные - " + ОбработкаКоманд.ОстаткиДенежныхСредств(Истина) + " руб.";
		
	Возврат ТекстОтвета + Символы.ПС;
	                                         
КонецФункции

Функция ТекстОшибкиНетСуммы(ЭтоПриход)
	
	ТекстОтвета = "Кажется, вы не написали сумму " + ?(ЭтоПриход, "прихода", "расхода") + ". Перепишите приход правильно...";
	
	Возврат ТекстОтвета;
	
КонецФункции

Функция ТекстОтветаНедостаточноСредств(Безнал)
	
	ТекстОтвета = "Недостаточно средств. У вас есть только " + ОстаткиДенежныхСредств(Безнал) + " руб. " + ?(Безнал,"по безналу.","наличными.");
	
	Возврат ТекстОтвета;
	
КонецФункции

Функция ТекстСообщенияПриветствие(Отправитель)
	
	ТекстОтвета = "Привет, " + Отправитель + "! 
					|Ты можешь вписывать сюда свои доходы и расходы. Просто напиши сообщение формата: ""приход/расход + сумма"", и я тебя пойму.";
	
	Возврат ТекстОтвета;
		
КонецФункции

Функция ТекстОтветаНеизвестнаяОперация() Экспорт
	
	ТекстОтвета = "Извините, мне не понятно, что вы хотите мне сообщить...";
	
	Возврат ТекстОтвета;
	
КонецФункции

Функция ТекстОтветаОстаткиДолгов(Выдавший = Неопределено)
	ТекстСообщения = "Остатки долгов:" ;
	ВсегоДолгов = 0;
	Если Выдавший <> Неопределено Тогда
		Остаток = ОбработкаКоманд.ОстатокДолга(Выдавший);
		ТекстСообщения = ТекстСообщения + "  * " + Выдавший + " : " + Остаток + " руб.";
		ВсегоДолгов = ВсегоДолгов + Остаток;
	Иначе
		Выборка = Справочники.ФизическиеЛица.Выбрать();
		Пока Выборка.Следующий() Цикл
			Остаток = ОбработкаКоманд.ОстатокДолга(Выборка.Ссылка);
			Если Остаток > 0 Тогда
				ТекстСообщения = ТекстСообщения + Символы.ПС + "  * " + Выборка + " : " + Остаток + " руб.";
			КонецЕсли;
			ВсегоДолгов = ВсегоДолгов + Остаток;
		КонецЦикла;  
	КонецЕсли;
	
	ТекстСообщения = ТекстСообщения + "
					|___________________________________
					| ИТОГО долгов: " + ВсегоДолгов + " руб.";
	
	Возврат ТекстСообщения;
КонецФункции
  
Функция ТекстОтветаПлановыеОперации(Начало, Конец)
	
	Текст = "Планируемые операции за период " + Формат(Начало,"ДЛФ=D") + " - " + Формат(Конец,"ДЛФ=D") + "
			|********************************************";
	
	ПлановыеОперацииРезультатЗапроса = ОбработкаКоманд.ПолучитьПлановыеОперацииЗаПериод(Начало, Конец);
	Выборка = ПлановыеОперацииРезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ИтогоПриход = 0;
	ИтогоРасход = 0;
	Пока Выборка.Следующий() Цикл
		
		Текст = Текст + "
				| < " + Формат(Выборка.Дата,"ДЛФ=D") + " >";
		
		ВыборкаДетЗаписи = Выборка.Выбрать();
		
		Пока ВыборкаДетЗаписи.Следующий() Цикл
			
			ИтогоПриход = ИтогоПриход + ВыборкаДетЗаписи.СуммаПрихода;
			ИтогоРасход = ИтогоРасход + ВыборкаДетЗаписи.СуммаРасхода;
			
			Текст = Текст + "
					| Поступления: " + ВыборкаДетЗаписи.СуммаПрихода + " руб." + ?(ВыборкаДетЗаписи.СуммаПрихода <> 0, " Статья: " + ВыборкаДетЗаписи.СтатьяПрихода,"") + ";
					| Расходы: " + ВыборкаДетЗаписи.СуммаРасхода + " руб." + ?(ВыборкаДетЗаписи.СуммаРасхода <> 0, " Статья: " + ВыборкаДетЗаписи.СтатьяРасхода,"");
			
		КонецЦикла; 
		
		Текст = Текст + "
				|____________________________________";		
		
	КонецЦикла; 
	
	Текст = Текст + " 
			|  ИТОГО:
			| * Поступления: " + ИтогоПриход + " руб.
			| * Расходы: " + ИтогоРасход + " руб.";
	
	Возврат Текст;
	
КонецФункции

Функция ПолучитьПлановыеОперацииЗаПериод(Начало, Конец)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Начало", Начало);
	Запрос.УстановитьПараметр("Конец", Конец);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПланируемыеДоходыРасходы.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ПриходРасход.Приход)
	|			ТОГДА ПланируемыеДоходыРасходы.Статья
	|	КОНЕЦ КАК СтатьяПрихода,
	|	ВЫБОР
	|		КОГДА ПланируемыеДоходыРасходы.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ПриходРасход.Расход)
	|			ТОГДА ПланируемыеДоходыРасходы.Статья
	|	КОНЕЦ КАК СтатьяРасхода,
	|	СУММА(ВЫБОР
	|			КОГДА ПланируемыеДоходыРасходы.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ПриходРасход.Приход)
	|				ТОГДА ПланируемыеДоходыРасходы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаПрихода,
	|	СУММА(ВЫБОР
	|			КОГДА ПланируемыеДоходыРасходы.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ПриходРасход.Расход)
	|				ТОГДА ПланируемыеДоходыРасходы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаРасхода,
	|	НАЧАЛОПЕРИОДА(ПланируемыеДоходыРасходы.Период, ДЕНЬ) КАК Дата
	|ИЗ
	|	РегистрСведений.ПланируемыеДоходыРасходы КАК ПланируемыеДоходыРасходы
	|ГДЕ
	|	ПланируемыеДоходыРасходы.Период МЕЖДУ &Начало И &Конец
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ПланируемыеДоходыРасходы.Период, ДЕНЬ),
	|	ВЫБОР
	|		КОГДА ПланируемыеДоходыРасходы.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ПриходРасход.Приход)
	|			ТОГДА ПланируемыеДоходыРасходы.Статья
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПланируемыеДоходыРасходы.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ПриходРасход.Расход)
	|			ТОГДА ПланируемыеДоходыРасходы.Статья
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|ИТОГИ
	|	СУММА(СуммаПрихода),
	|	СУММА(СуммаРасхода)
	|ПО
	|	Дата";
		
	Возврат Запрос.Выполнить();
		
КонецФункции

Функция ТекстДетальныйАнализДолга(Выдавший)
	
	ТекстСообщения = "Анализ долга перед физлицом " + Выдавший + "
					|*****************************************" + Символы.ПС;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДолгиОбороты.Период КАК Период,
	|	СУММА(ДолгиОбороты.СуммаПриход) КАК СуммаПриход,
	|	СУММА(ДолгиОбороты.СуммаРасход) КАК СуммаРасход
	|ИЗ
	|	РегистрНакопления.Долги.Обороты(
	|			,
	|			,
	|			День,
	|			Выдавший = &Выдавший
	|				И НЕ Долг.Закрыт) КАК ДолгиОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ДолгиОбороты.Период";
	Запрос.УстановитьПараметр("Выдавший", Выдавший);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ИтогПриход = 0;
	ИтогРасход = 0;
	
	Пока Выборка.Следующий() Цикл
		
		ИтогПриход = ИтогПриход + Выборка.СуммаПриход;
		ИтогРасход = ИтогРасход + Выборка.СуммаРасход;
		
		ТекстСообщения = ТекстСообщения + " Дата: " + Формат(Выборка.Период, "ДЛФ=D") + Символы.ПС + 
						?(ЗначениеЗаполнено(Выборка.СуммаПриход), "    *Увеличение: " + Выборка.СуммаПриход + " руб." + Символы.ПС,"") +
						?(ЗначениеЗаполнено(Выборка.СуммаРасход), "    *Уменьшение: " + Выборка.СуммаРасход + " руб." + Символы.ПС,"");	
	КонецЦикла;  
	
	ТекстСообщения = ТекстСообщения + "
	|____________________________________
	| ИТОГО: 
	|   *Получено в долг: " + ИтогПриход + " руб.
	|   *Погашено: " + ИтогРасход + " руб.";
	
	Возврат ТекстСообщения;
	
КонецФункции

#КонецОбласти 
