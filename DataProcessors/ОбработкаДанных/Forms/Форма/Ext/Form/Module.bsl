
&НаКлиенте
Процедура ПроверитьЧек(Команда)
	
	Сообщить(ПроверкаЧеков.ПроверитьЧек(ДанныеШтрихкода, ТекПользователь()));
	
КонецПроцедуры

&НаСервере
Функция ТекПользователь()
	
	Возврат ПараметрыСеанса.ТекущийПользователь;
	
КонецФункции


&НаСервереБезКонтекста
Процедура ОбработатьСообщенияНаСервере()
	
	ОбменТелеграм.ОбработатьКоманды();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСообщения(Команда)
	
	ОбработатьСообщенияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОстаткиНаСервере()
	
	ОбменТелеграм.ОтправитьОтчетЗаПериод(Период.ДатаНачала,Период.ДатаОкончания);
	
КонецПроцедуры

&НаКлиенте
Процедура Остатки(Команда)
	
	ОстаткиНаСервере();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьIAMЯндексНаСервере()
	
	ОбменЯндекс.ОбновитьIAMТокен();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьIAMЯндекс(Команда)
	
	ОбновитьIAMЯндексНаСервере();
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ОбновитьПроксиAPIНаСервере()
	
	СлужебныеПроцедуры.ОбновитьПрокси();
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьПроксиAPI(Команда)
	
	ОбновитьПроксиAPIНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ПолучитьУниграммуСтроки(Команда)
	
	Униграмма = СлужебныеПроцедурыКлиентСервер.ПолучитьУниграммуСтроки(Строка);
	
	Для каждого Слово Из Униграмма Цикл
		Сообщить(Слово);
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Строка = "Добавить в кошелёк 50 рублей и принисите мне чёрный кофе с двумя ложками сахара и молоком!";
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьУниграммыВСловарь(Команда)
	
	ДобавитьУниграммыВСловарь(Строка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВСловарьИзФайла(Команда)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Показать(Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект));	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Для каждого ВыбранныйФайл Из ВыбранныеФайлы Цикл
		ДобавитьВСловарьИзФайлаНаСервере(ВыбранныйФайл);
	КонецЦикла; 
	
КонецПроцедуры
 
&НаСервереБезКонтекста
Процедура ДобавитьВСловарьИзФайлаНаСервере(ИмяФайла)
	
	ТекДок = Новый ТекстовыйДокумент;
	ТекДок.Прочитать(ИмяФайла, КодировкаТекста.UTF8);
	
	КоличествоСтрок = ТекДок.КоличествоСтрок();
	
	Для Индекс = 1 По КоличествоСтрок Цикл
		
		ТекСтрока = ТекДок.ПолучитьСтроку(Индекс);
		Если ЗначениеЗаполнено(ТекСтрока) Тогда
			СлужебныеПроцедуры.ДобавитьУниграммыВСловарь(ТекСтрока);
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура НазначитьВекторыСловарюНаСервере()
	
	КоличествоУниграмм = НейронныеСети.КоличествоУниграмм();
	Выборка = Справочники.Униграммы.Выбрать();
	Индекс = 1;
	
	Пока Выборка.Следующий() Цикл
		
		СпрОбъект = Выборка.ПолучитьОбъект();
		СпрОбъект.Вектор = Индекс / КоличествоУниграмм;
		СпрОбъект.Записать();
		
		Индекс = Индекс + 1;
		
	КонецЦикла; 
	
КонецПроцедуры


&НаКлиенте
Процедура НазначитьВекторыСловарю(Команда)
	НазначитьВекторыСловарюНаСервере();
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ЗаполнитьНейроныНаСервере(НейроннаяСеть)
	
	НаборЗаписей = РегистрыСведений.НейронныеСети.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.НейроннаяСеть.Установить(НейроннаяСеть);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	//ИмяМетаданных = Метаданные.НайтиПоТипу(НейроннаяСеть.ВидВходаНейрона.ТипЗначения.Типы()[0]).ПолноеИмя();
	//Выборка = СлужебныеПроцедуры.МенеджерОбъектаПоПолномуИмени(ИмяМетаданных).Выбрать();
	//
	//ИмяМетаданных = Метаданные.НайтиПоТипу(НейроннаяСеть.ВидВходаНейрона.ТипЗначения.Типы()[0]).ПолноеИмя();
	//
	//Пока Выборка.Следующий() Цикл
	//	
	//	
	//	
	//КонецЦикла; 
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьНейроны(Команда)
	
	ЗаполнитьНейроныНаСервере(НейроннаяСеть);
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НейроннаяСеть = Справочники.ЛинейныеНейронныеСети.АнализТекстаСообщения;
	
КонецПроцедуры
 